version: 2.1
commands: 
  #Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy Environment
          when: on_fail
          command:  |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:
  #create_infrastructure:
    #docker:
      #- image:  amazon/aws-cli
    #steps:  
      #- checkout
      #- run:
          #name: Create a CloudFormation Stack
          #command:  |
            #aws cloudformation deploy \
              #--template-file template.yml \
              #--stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
              #--region us-east-1
      #- run:  return 1 -- uncomment to simulate a failure
      #- destroy_environment

  #configure_infrastructure: 
    #docker:
      #- image: python:3.7-alpine3.11
    #steps:
      #- checkout
      #- add_ssh_keys:
          #fingerprints: ["41:c1:8c:43:5c:6f:fe:30:51:9d:1f:ee:86:e6:89:6f"] 
      #- run:
          #name: Install dependencies
          #command: |
            #apk add --update ansible 
      #- run:
          #name: Configure server
          #command: |
            #ansible-playbook -i inventory.txt main.yml


  # Exercise: Promote to Production - Job 1
  # Executes the bucket.yml - Deploy an S3 bucket, and interface with that bucket to synchronize the files between local and the bucket.
  # Note that the `--parameter-overrides` let you specify a value that override parameter value in the bucket.yml template file.
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Execute bucket.yml - Create Cloudformation Stack
          command: |
            aws cloudformation deploy \
            --template-file bucket.yml \
            --stack-name stack-create-bucket-${CIRCLE_WORKFLOW_ID:0:7} \
            --parameter-overrides MyBucketName="mybucket-${CIRCLE_WORKFLOW_ID:0:7}"
      # Uncomment the step below if yoou wish to upload all contents of the current directory to the S3 bucket
      # - run: aws s3 sync . s3://mybucket-${CIRCLE_WORKFLOW_ID:0:7} --delete



  #smoke_test:
    #docker:
      #- image:  alpine:latest
    #steps:
      #- run:  apk add --update curl
      #- run:  
          #name: smoke test
          #command:  |
            #URL="https://blog.udacity.com/"
            # Test if website exists
            #if curl -s --head ${URL}
            #then
              #return 0
            #else
              #return 1
            #fi

workflows:
  my_workflow:
    jobs:
      #- create_infrastructure
      #- configure_infrastructure
      #- smoke_test
      - create_and_deploy_front_end
      #- promote_to_production:
          #requires: 
            #- create_and_deploy_front_end
      #- get_last_deployment_id
      #- clean_up_old_front_end:
          #requires:
            #- get_last_deployment_id
            #- promote_to_production
